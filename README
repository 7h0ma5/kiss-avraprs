This is a project that combines code from a number of sources into a,
hopefully, working and useful KISS TNC for at least APRS.

Thanks to BertOS, KI4MCW and OM5AMX, without whom I probably wouldn't have
been able to do this.
Starting with the BertOS example for AVR, KI4MCW made excellent progress
before turning to the Parallax Propeller.  I wanted to stick with the AVR
so I looked at other projects that used BertOS and happened across OM5AMX's
work on the Cortex-M3.  Michal's KISS implementation is more complete than
Rob had created so far.

The work I've done is mostly limited to merging the KISS implementation with
Rob's modifications to the original BertOS example code.  Original code is
available from the code below:

http://www.bertos.org/use/examples-projects/arduino-aprs/
https://sites.google.com/site/ki4mcw/Home/arduino-tnc
http://michaldemin.wordpress.com/2012/02/27/cheap-afsk-tnc/

I've added PTT output on PB3 / Arduino D11, LED strobe output on PB4 / D12
when the DAC code is running, in addition to the LED strobe on PB5 / D13 when
the ADC is running.  The latter is either not working, or is too fast for the
LED to be seen by eye.

Testing has, so far, been performed off-air with a Linux machine with Xastir
and Soundmodem, as well as the APRS test CD.  On-air receive testing will occur
next, followed by monitored transmit testing.

Problems, bugs, things to fix...

On the Uno, if the serial port isn't opened soon after the device is powered
on, the USB-serial code on the ATmega8U4 doesn't allow the tty device to be
opened on the computer.  I've heard there might be bugs in the LUFA
implementation but I haven't looked into those claims.

I need to verify how the board behaves in real life.  There's a real
possibility that it'll end up being unfriendly on-air, transmitting over
whomever it pleases.

The ADC (receive) strobe indicator on PB5 / D13 isn't visible, or is broken.
I'm Thinking about toggling it on & off when the routine is entered, rather
than when the routine is entered and exited.  This might slow it down a bit.

Due to the limited RAM space on the ATmega 328P there are some limitations:
	The serial buffer is 330 bytes.
	The AFSK TX/RX buffers are 64 bytes each.
This probably will not work well as a full-fledged KISS TNC!

-Paul
N2KIQ
